this.workbox=this.workbox||{},this.workbox.rangeRequests=function(e,t,r){"use strict";try{self["workbox:range-requests:5.1.4"]&&_()}catch(e){}async function s(e,r){try{if(206===r.status)return r;const s=e.headers.get("range");if(!s)throw new t.WorkboxError("no-range-header");const n=function(e){const r=e.trim().toLowerCase();if(!r.startsWith("bytes="))throw new t.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:r});if(r.includes(","))throw new t.WorkboxError("single-range-only",{normalizedRangeHeader:r});const s=/(\d*)-(\d*)/.exec(r);if(!s||!s[1]&&!s[2])throw new t.WorkboxError("invalid-range-values",{normalizedRangeHeader:r});return{start:""===s[1]?void 0:Number(s[1]),end:""===s[2]?void 0:Number(s[2])}}(s),o=await r.blob(),a=function(e,r,s){const n=e.size;if(s&&s>n||r&&r<0)throw new t.WorkboxError("range-not-satisfiable",{size:n,end:s,start:r});let o,a;return void 0!==r&&void 0!==s?(o=r,a=s+1):void 0!==r&&void 0===s?(o=r,a=n):void 0!==s&&void 0===r&&(o=n-s,a=n),{start:o,end:a}}(o,n.start,n.end),i=o.slice(a.start,a.end),d=i.size,c=new Response(i,{status:206,statusText:"Partial Content",headers:r.headers});return c.headers.set("Content-Length",String(d)),c.headers.set("Content-Range",`bytes ${a.start}-${a.end-1}/`+o.size),c}catch(e){return new Response("",{status:416,statusText:"Range Not Satisfiable"})}}return e.RangeRequestsPlugin=class{constructor(){this.cachedResponseWillBeUsed=async({request:e,cachedResponse:t})=>t&&e.headers.has("range")?await s(e,t):t}},e.createPartialResponse=s,e}({},workbox.core._private,workbox.core._private);