this.workbox=this.workbox||{},this.workbox.streams=function(e,t,n){"use strict";try{self["workbox:streams:5.1.4"]&&_()}catch(e){}function r(e){const n=e.map((e=>Promise.resolve(e).then((e=>function(e){return e instanceof Response?e.body.getReader():e instanceof ReadableStream?e.getReader():new Response(e).body.getReader()}(e))))),r=new t.Deferred;let o=0;const s=new ReadableStream({pull(e){return n[o].then((e=>e.read())).then((t=>{if(t.done)return o++,o>=n.length?(e.close(),void r.resolve()):this.pull(e);e.enqueue(t.value)})).catch((e=>{throw r.reject(e),e}))},cancel(){r.resolve()}});return{done:r.promise,stream:s}}function o(e={}){const t=new Headers(e);return t.has("content-type")||t.set("content-type","text/html"),t}function s(e,t){const{done:n,stream:s}=r(e),a=o(t);return{done:n,response:new Response(s,{headers:a})}}function a(){return n.canConstructReadableStream()}return e.concatenate=r,e.concatenateToResponse=s,e.isSupported=a,e.strategy=function(e,t){return async({event:n,request:r,url:c,params:u})=>{const i=e.map((e=>Promise.resolve(e({event:n,request:r,url:c,params:u}))));if(a()){const{done:e,response:r}=s(i,t);return n&&n.waitUntil(e),r}const l=i.map((async e=>{const t=await e;return t instanceof Response?t.blob():new Response(t).blob()})),p=await Promise.all(l),d=o(t);return new Response(new Blob(p),{headers:d})}},e}({},workbox.core._private,workbox.core._private);